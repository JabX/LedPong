C51 COMPILER V9.50a   LEDPONG                                                              11/27/2014 18:23:42 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE LEDPONG
OBJECT MODULE PLACED IN LedPong.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe LedPong.c DB OE BR INCDIR(C:\Program Files (x86)\SiLabs\MCU\Inc)

line level    source

   1          #include <c8051f310.h>
   2          #include <stdlib.h>
   3          
   4          // SFR16 definitions
   5          sfr16 TMR2RL   = 0xca;                    // Timer2 reload value
   6          sfr16 TMR2     = 0xcc;                    // Timer2 counter
   7          
   8          // Same clock, same data for all 4 panels, but different loads
   9          sbit CLK        = P0^0;
  10          sbit DATA       = P1^0;
  11          sbit LOAD1      = P1^3;
  12          sbit LOAD2      = P1^4;
  13          sbit LOAD3      = P1^1;
  14          sbit LOAD4      = P1^2;
  15          
  16          sbit J1UP       = P2^1;
  17          sbit J1DOWN     = P2^0;
  18          sbit J2UP       = P2^3;
  19          sbit J2DOWN     = P2^2;
  20          
  21          xdata char m[16][16];   // Matrix
  22          int isFrame = 0;                // True : draw frame
  23          
  24          int paddleL;
  25          int paddleR;
  26          int paddleSize = 2;             // True size = 1 + 2*paddleSize
  27          
  28          int scoreL = 0;
  29          int scoreR = 0;
  30          
  31          int ball[2] = (40, 4);          // *10 in order to have subpositions for the ball, without using floats (10 subpos
             -itions per led)
  32          int ballXway = 1;
  33          int ballYway = 1;
  34          int angle = 0;          // not a real angle, juste an Y movement at each frame
  35          
  36          unsigned char init;             // Byte iterator
  37          int i;                                  // Int iterator
  38          int j;                                  // Int iterator
  39          
  40          
  41          void drawPaddle(int, int);
  42          
  43          void clearBall();
  44          void moveBall();
  45          void drawBall();
  46          
  47          void initMIC();
  48          
  49          void initTimer2(int);
  50          void timer2_ISR();
  51          
  52          void initDisplay();
  53          void clearDisplay();
  54          
C51 COMPILER V9.50a   LEDPONG                                                              11/27/2014 18:23:42 PAGE 2   

  55          void clearMatrix();
  56          void displayMatrix();
  57          
  58          // Matrices definition
  59          //      3       4
  60          //              1       2
  61          
  62          void writeData(int, unsigned char, unsigned char);      // Set all LEDs on matrix 'int'
  63          void sendDataAll(unsigned char, unsigned char);         // Send a non-LED message to all matrixes
  64          void sendData1(unsigned char, unsigned char, int);
  65          void sendData2(unsigned char, unsigned char, int);
  66          void sendData3(unsigned char, unsigned char, int);
  67          void sendData4(unsigned char, unsigned char, int);
  68          void sendData(unsigned char, unsigned char, int);
  69          
  70          
  71          void main()
  72          {
  73   1              initTimer2(65535);
  74   1              initMIC();
  75   1              initDisplay();
  76   1      
  77   1              paddleL = 7;
  78   1              paddleR = 7;
  79   1              angle = 13;
  80   1              while (1)
  81   1              {
  82   2                      if(isFrame)
  83   2                      {
  84   3                              isFrame = 0;
  85   3      
  86   3                              if(J1DOWN == 0 && paddleL > paddleSize)
  87   3                                      paddleL--;
  88   3                              if(J1UP == 0 && paddleL < 14 - paddleSize)
  89   3                                      paddleL++;
  90   3      
  91   3                              if(J2DOWN == 0 && paddleR > paddleSize)
  92   3                                      paddleR--;
  93   3                              if(J2UP == 0 && paddleR < 14 - paddleSize)
  94   3                                      paddleR++;
  95   3      
  96   3                              drawPaddle(0,0);
  97   3                              drawPaddle(1,15);
  98   3                              moveBall();
  99   3                              displayMatrix();
 100   3                      }
 101   2              }
 102   1      }
 103          
 104          ////////////////////
 105          //// Game logic ////
 106          ////////////////////
 107          
 108          void drawPaddle(int n, int col)
 109          {
 110   1              int paddle;
 111   1              int oobb;
 112   1              int oobt;
 113   1      
 114   1              if(!n) paddle = paddleL; else paddle = paddleR;
 115   1      
 116   1              oobb = paddle - paddleSize - 1;
C51 COMPILER V9.50a   LEDPONG                                                              11/27/2014 18:23:42 PAGE 3   

 117   1              oobt = paddle + paddleSize + 1;
 118   1      
 119   1              if(oobb < 0) oobb = 0;
 120   1              if(oobt > 14) oobt = 14;
 121   1      
 122   1              m[oobb][col] = 0;
 123   1              m[oobt][col] = 0;
 124   1      
 125   1              for(i = paddle - paddleSize; i <= paddle + paddleSize; i++)
 126   1                      m[i][col] = 1;
 127   1      }
 128          
 129          
 130          void clearBall()
 131          {
 132   1              m[(int)(ball[0]/10)][ball[1]] = 0;
 133   1      }
 134          
 135          void moveBall()
 136          {
 137   1              clearBall();
 138   1              // Test movements, no real collision yet
 139   1              if (ball[0] < 10)
 140   1                      ballXway = 1;
 141   1              else if (ball[0] > 140)
 142   1                      ballXway = -1;
 143   1              if (ball[1] < 1)
 144   1                      ballYway = 1;
 145   1              else if (ball[1] > 14)
 146   1                      ballYway = -1;
 147   1              ball[0] += ballXway*angle;
 148   1              ball[1] += ballYway;
 149   1              drawBall();
 150   1      }
 151          
 152          void drawBall()
 153          {
 154   1              m[(int)(ball[0]/10)][ball[1]] = 1;
 155   1      }
 156          
 157          /////////////////////
 158          //// LOWER-LEVEL ////
 159          /////////////////////
 160          
 161          void initMIC()
 162          {
 163   1              PCA0MD  &= ~0x40;       // Turn off watchdog
 164   1      
 165   1              OSCICN   = 0xc3;        // Configure internal oscillator for its lowest frequency
 166   1              RSTSRC   = 0x04;        // Enable missing clock detector
 167   1      
 168   1              XBR1     = 0x40;        // Enable crossbar
 169   1              P0MDOUT |= 0x01;        // Push-pull for P0.0
 170   1              P1MDOUT |= 0x1F;        // Push-pull for P1.0 -> P1.4
 171   1      
 172   1              EA = 1;                         // Enable interruptions
 173   1      }
 174          
 175          void initDisplay()
 176          {
 177   1              CLK     = 0;
 178   1              DATA    = 0;
C51 COMPILER V9.50a   LEDPONG                                                              11/27/2014 18:23:42 PAGE 4   

 179   1              LOAD1   = 0;
 180   1              LOAD2   = 0;
 181   1              LOAD3   = 0;
 182   1              LOAD4   = 0;
 183   1      
 184   1              sendDataAll(0x0C, 0x00);        // Shutdown
 185   1              sendDataAll(0x0F, 0x00);        // Normal operation mode
 186   1              sendDataAll(0x0C, 0x01);        // Normal operation mode
 187   1              sendDataAll(0x0A, 0x0F);        // Intensity
 188   1              sendDataAll(0x0B, 0x07);        // No scan limit
 189   1              sendDataAll(0x09, 0x00);        // No decode
 190   1      
 191   1              clearDisplay();
 192   1      }
 193          
 194          
 195          void clearMatrix()
 196          {
 197   1              for(i = 0; i <= 16; i++)
 198   1                      for(j = 0; j <= 16; j++)
 199   1                              m[i][j] = 0;
 200   1      }
 201          
 202          void clearDisplay()
 203          {
 204   1              clearMatrix();
 205   1              displayMatrix();
 206   1      }
 207          
 208          void displayMatrix()
 209          {
 210   1              int k;
 211   1              unsigned char a;
 212   1              unsigned char d;
 213   1              unsigned char b;
 214   1      
 215   1              for (i = 0; i < 16; i++)
 216   1              {
 217   2                      k = (i % 8) + 1;
 218   2                      a = '0' + k;
 219   2      
 220   2                      // Left matrixes
 221   2                      d = 0x00;
 222   2                      b = 0x80;
 223   2                      for (j = 0; j < 8; j++)
 224   2                      {
 225   3                              if(m[i][j])
 226   3                                      d |= b;
 227   3                              b = b >> 1;
 228   3                      }
 229   2                      if(i < 8)
 230   2                              writeData(1, a, d);
 231   2                      else
 232   2                              writeData(3, a, d);
 233   2      
 234   2                      // Right matrixes
 235   2                      d = 0x00;
 236   2                      b = 0x80;
 237   2                      for (j = 8; j < 16; j++)
 238   2                      {
 239   3                              if(m[i][j])
 240   3                                      d |= b;
C51 COMPILER V9.50a   LEDPONG                                                              11/27/2014 18:23:42 PAGE 5   

 241   3                              b = b >> 1;
 242   3                      }
 243   2                      if(i < 8)
 244   2                              writeData(2, a, d);
 245   2                      else
 246   2                              writeData(4, a, d);
 247   2              }
 248   1      }
 249          
 250          void writeData(int n, unsigned char a, unsigned char d)
 251          {
 252   1              switch(n)
 253   1              {
 254   2              case 1:
 255   2                      sendData1(a, d, 1);
 256   2                      break;
 257   2              case 2:
 258   2                      sendData2(a, d, 1);
 259   2                      break;
 260   2              case 3:
 261   2                      sendData3(a, d, 1);
 262   2                      break;
 263   2              case 4:
 264   2                      sendData4(a, d, 1);
 265   2                      break;
 266   2              }
 267   1      }
 268          
 269          void sendDataAll(unsigned char a, unsigned char d)
 270          {
 271   1              sendData1(a, d, 0);
 272   1              sendData2(a, d, 0);
 273   1              sendData3(a, d, 0);
 274   1              sendData4(a, d, 0);
 275   1      }
 276          
 277          void sendData1(unsigned char a, unsigned char d, int isLine)
 278          {
 279   1              LOAD1 = 0;
 280   1              sendData(a, d, isLine);
 281   1              LOAD1 = 1;
 282   1      }
 283          
 284          void sendData2(unsigned char a, unsigned char d, int isLine)
 285          {
 286   1              LOAD2 = 0;
 287   1              sendData(a, d, isLine);
 288   1              LOAD2 = 1;
 289   1      }
 290          
 291          void sendData3(unsigned char a, unsigned char d, int isLine)
 292          {
 293   1              LOAD3 = 0;
 294   1              sendData(a, d, isLine);
 295   1              LOAD3 = 1;
 296   1      }
 297          
 298          void sendData4(unsigned char a, unsigned char d, int isLine)
 299          {
 300   1              LOAD4 = 0;
 301   1              sendData(a, d, isLine);
 302   1              LOAD4 = 1;
C51 COMPILER V9.50a   LEDPONG                                                              11/27/2014 18:23:42 PAGE 6   

 303   1      }
 304          
 305          void sendData(unsigned char a, unsigned char d, int isLine)
 306          {
 307   1              unsigned char b;
 308   1              unsigned char p;
 309   1      
 310   1              EA = 0;
 311   1              CLK = 0;
 312   1      
 313   1              for(b=0x80; b>0; b=b>>1)
 314   1              {
 315   2                      DATA = (a&b)?1:0;
 316   2                      CLK = 1;
 317   2                      CLK = 0;
 318   2              }
 319   1      
 320   1              if(isLine)
 321   1              {
 322   2                      p = (d&0x01);
 323   2                      d >>= 1;
 324   2                      d &= 0x7F;
 325   2                      if(p) d |= 0x80;
 326   2              }
 327   1      
 328   1              for(b=0x80; b>0; b=b>>1)
 329   1              {
 330   2                      DATA = (d&b)?1:0;
 331   2                      CLK = 1;
 332   2                      CLK = 0;
 333   2              }
 334   1      
 335   1              EA = 1;
 336   1      }
 337          
 338          void initTimer2(int counts)
 339          {
 340   1              TMR2CN = 0x00;
 341   1              CKCON  &= ~0x60;
 342   1              TMR2RL = -counts;
 343   1              TMR2   = 0xffff;
 344   1              ET2    = 1;
 345   1              TR2    = 1;
 346   1      }
 347          
 348          void timer2_ISR() interrupt 5
 349          {
 350   1              TF2H = 0;
 351   1              isFrame = 1;
 352   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1332    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    256    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
